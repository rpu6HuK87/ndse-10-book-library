</div>

<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"
        integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj"
        crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-ho+j7jyWK8fNQe+A12Hb8AhRq26LrZ/JpcUGGOn+Y7RsweNrtN/tE3MoK7ZeZDyx"
        crossorigin="anonymous"></script>

<script>
const pathname = location.pathname.split('/')
let room
console.log(pathname)
//если открыли книгу, цепляемся к room
if(pathname.length === 3 && pathname[1] == 'books' && pathname[2] != 'create') {
  room = pathname[2]
  
  const socket = io.connect('/', {
    transports: ['websocket'],
    protocols: ['my-protocol-v1'],
    query: {'roomName': room}
  })
}

/* const socket = io.connect('/', {query: `roomName=${roomName}`});
const boxList = document.querySelector('#list');
const inputUsername = document.querySelector('#username');
const inputText = document.querySelector('#text');
const sendAll = document.querySelector('#send-all');
const sendMe = document.querySelector('#send-me');
const sendRoom = document.querySelector('#send-room');

const getTmp = (msg) => {
  return `
    <div class="list-group-item list-group-item-action">
      <div class="d-flex w-100 justify-content-between">
        <small>${msg.username}</small>
        <small class="text-muted">${msg.type}</small>
      </div>
      <p class="mb-1">${msg.text}</p>
    </div>`
}

socket.on('message-to-me', (msg) => {
  const div = getTmp(msg)
  boxList.insertAdjacentHTML('beforeend', div)
})

sendMe.addEventListener('click', () => {
  socket.emit('message-to-me', {
    username: inputUsername.value,
    text: inputText.value,
  })
})


socket.on('message-to-all', (msg) => {
  const div = getTmp(msg);
  boxList.insertAdjacentHTML('beforeend', div)
})

sendAll.addEventListener('click', () => {
  socket.emit('message-to-all', {
    username: inputUsername.value,
    text: inputText.value,
  })
})


socket.on('message-to-room', (msg) => {
  const div = getTmp(msg);
  boxList.insertAdjacentHTML('beforeend', div)
})

sendRoom.addEventListener('click', () => {
  socket.emit('message-to-room', {
    username: inputUsername.value,
    text: inputText.value,
  })
}) */

</script>        
</body>
</html>